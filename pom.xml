<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>exercise.lawnmower</groupId>
	<artifactId>automatic-lawnmower</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>${project.groupId}::${project.artifactId}</name>
	<inceptionYear>2019</inceptionYear>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.source.version>1.8</java.source.version>
		<java.target.version>${java.source.version}</java.target.version>
		<source.line.length>180</source.line.length>

		<checkstyle.file>${project.basedir}/checkstyle.xml</checkstyle.file>
		<findbugs.exclude.file>${project.basedir}/findbugs-exclude.xml</findbugs.exclude.file>

		<junit.version>4.12</junit.version>
		<assertj.core.version>1.7.1</assertj.core.version>
		<slf4j.version>1.7.9</slf4j.version>
		<jcommander.version>1.47</jcommander.version>

		<jar.mainclass>exercise.lawnmower.main.Main</jar.mainclass>

		<maven.eclipse.download.sources>true</maven.eclipse.download.sources>
		<maven.eclipse.download.javadocs>true</maven.eclipse.download.javadocs>
		<maven-license-plugin.version>2.8</maven-license-plugin.version>
	</properties>

	<licenses>
		<license>
			<name>GNU Lesser General Public License as published by the Free
					Software Foundation; either version 2.1 of the License, or (at your
					option) any later version.</name>
			<url>http://www.fsf.org/licensing/licenses/lgpl.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:/jessomba/tondeuse</connection>
		<developerConnection>git@github.com:/jessomba/tondeuse</developerConnection>
	</scm>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>

			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.core.version}</version>
			</dependency>
			<dependency>
				<groupId>com.beust</groupId>
				<artifactId>jcommander</artifactId>
				<version>${jcommander.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

	</dependencies>
	<build>
		<defaultGoal>clean package</defaultGoal>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${maven-license-plugin.version}</version>
				<configuration>
					<header>${license.header.file}</header>
					<excludes>
						<exclude>**/.gitignore</exclude>
						<exclude>**/.checkstyle</exclude>
						<exclude>**/input.example.txt</exclude>
						<exclude>**/README.md</exclude>
						<exclude>**/checkstyle.xml</exclude>
					</excludes>
					<strictCheck>true</strictCheck>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${java.source.version}</source>
					<target>${java.target.version}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<lineLength>${source.line.length}</lineLength>
					<verbose>false</verbose>
					<XaddSerialVersionUID>true</XaddSerialVersionUID>
					<compilerArgument>-Xlint:all</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<!--<goals> <goal>jar-no-fork</goal> </goals> -->
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
						<projectnature>org.maven.ide.eclipse.maven2Nature</projectnature>
						<projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
						<projectnature>com.atlassw.tools.eclipse.checkstyle.CheckstyleNature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.maven.ide.eclipse.maven2Builder</buildcommand>
						<buildcommand>org.eclipse.m2e.core.maven2Builder</buildcommand>
						<buildcommand>com.atlassw.tools.eclipse.checkstyle.CheckstyleBuilder</buildcommand>
						<forceRecheck>true</forceRecheck>
					</additionalBuildcommands>
					<additionalConfig>
						<file>
							<name>.checkstyle</name>
							<content>
							  <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
							  <fileset-config file-format-version="1.2.0" simple-config="true" sync-formatter="true">
							     <local-check-config name="${project.groupId}-checkstyle" location="${checkstyle.file}" type="external" description="">
							        <additional-data name="protect-config-file" value="false"/>
							     </local-check-config>
							     <fileset name="all" enabled="true" check-config-name="${project.groupId}-checkstyle" local="true">
							        <file-match-pattern match-pattern="." include-pattern="true"/>
							     </fileset>
							  </fileset-config>
					        ]]>
							</content>
						</file>
					</additionalConfig>
					<classpathContainers>
						<classpathContainer>org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
					</classpathContainers>
					<useProjectReferences>true</useProjectReferences>
					<downloadSources>${maven.eclipse.download.sources}</downloadSources>
					<downloadJavadocs>${maven.eclipse.download.javadocs}</downloadJavadocs>
					<encoding>${project.build.sourceEncoding}</encoding>
					<projectNameTemplate>[artifactId]-[version]</projectNameTemplate> <!-- [groupId]- -->
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>onejar</name>
					<value>true</value>
				</property>
			</activation>

			<build>
				<defaultGoal>clean package</defaultGoal>

				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>2.6</version>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									<useUniqueVersions>false</useUniqueVersions>
									<mainClass>${jar.mainclass}</mainClass>
									<classpathPrefix>lib/</classpathPrefix>
								</manifest>
								<manifestEntries>
									<Implementation-Build>${buildNumber}</Implementation-Build>
									<mode>development</mode>
									<version>${project.version}</version>
								</manifestEntries>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>jar</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.10</version>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/lib</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>false</overWriteSnapshots>
									<overWriteIfNewer>true</overWriteIfNewer>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>